from SampledGraph import SampledGraph


class SampledGraphDegree(SampledGraph):
    """This class extends SampledGraph class with specified methods for Degree centrality metrics.

    Attributes:
        :param Graph SampledGraph.__init__: input object SampledGraph with Graph object parameter.
    """
    '''
    def __init__(self, g, failure_probability):
        SampledGraph.__init__(self, g, failure_probability)
    '''
    def sorted_nodes_list(self):
        """Sort the list of graph nodes according to their Degree.

        Returns:
            :returns: full_sorted_node_list. Returns the list of graph nodes sorted by Degree.
            :rtype: list
        """
        full_sorted_node_list = map(lambda k: k[0], sorted(self.graph.degree(),
                                                           key=lambda k: k[1], reverse=True))
        return full_sorted_node_list
